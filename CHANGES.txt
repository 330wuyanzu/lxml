lxml changelog
==============

under development
=================

Features added
--------------

* Support for copy.deepcopy() on elements.

* Increased compatibility with (c)ElementTree; .parse() on ElementTree is
  now supported and parsing of gzipped XML files works.

* implemented index() on elements, allowing one to find the index of a
  SubElement.

Bugs fixed
---------

* Passing 'None' to tostring() does not result in a segfault anymore,
  but an AssertionError.

* Some test fixes for Windows.

* Raise XMLSyntaxError and XPathSyntaxError instead of plain python
  syntax errors. This should be less confusing.

* Fixed error with uncaught exception in Pyrex code.

* Calling lxml.etree.fromstring('') now throws XMLSyntaxError instead
  of a segfault.

* has_key() now works on attrib. 'in' tests also work correctly now on
  attrib.

* INSTALL.txt was saying 2.2.16 instead of 2.6.16 as a supported
  libxml2 version, as it should.

0.7 (2005-06-15)
================

Features added
--------------

* parameters (XPath expressions) can now be passed to XSLT using
  keyword parameters.

* Simple XInclude support. Calling the xinclude() method on a tree
  will process any XInclude statements in the document.

* XMLSchema support. Use the XMLSchema class or the convenience
  xmlschema() method on a tree to do XML Schema (XSD) validation.

* Added convenience xslt() method on tree. This is less efficient
  than the XSLT object, but makes it easier to write quick code.

* Added convenience relaxng() method on tree. This is less efficient
  than the RelaxNG object, but makes it easier to write quick code.

* Make it possible to use XPathEvaluator with elements as well. The
  XPathEvaluator in this case will retain the element so multiple
  XPath queries can be made against one element efficiently. This
  replaces the second argument to the .evaluate() method that existed
  previously.

* Allow registerNamespace() to be called on an XPathEvaluator, after
  creation, to add additional namespaces. Also allow registerNamespaces(),
  which does the same for a namespace dictionary.

* Add 'prefix' attribute to element to be able to read prefix information.
  This is entirely read-only.

* It is possible to supply an extra nsmap keyword parameter to
  the Element() and SubElement() constructors, which supplies a
  prefix to namespace URI mapping. This will create namespace
  prefix declarations on these elements and these prefixes will show up
  in XML serialization.
  
Bugs fixed
----------
 
* Killed yet another memory management related bug: trees created
  using newDoc would not get a libxml2-level dictionary, which caused
  problems when deallocating these documents later if they contained a
  node that came from a document with a dictionary.

* Moving namespaced elements between documents was problematic as 
  references to the original document would remain. This has been fixed
  by applying xmlReconciliateNs() after each move operation.

* Can pass None to 'dump()' without segfaults.

* tostring() now works properly for non-root elements as well.

* Cleaned out the tostring() method so it should handle encoding
  correctly.

* Cleaned out the ElementTree.write() method so it should handle
  encoding correctly. Writing directly to a file should also be faster
  now, as there is no need to go through a Python string in that
  case. Made sure the test cases test both serializing to StringIO as
  well as serializing to a real file.

0.6 (2005-05-14)
================

Features added
--------------

* Changed setup.py so that library_dirs is also guessed. This should
  help with compilation on the Mac OS X platform, where otherwise the
  wrong library (shipping with the OS) could be picked up.

* Tweaked setup.py so that it picks up the version from version.txt.

Bugs fixed
----------

* Do the right thing when handling namespaced attributes.

* fix bug where tostring() moved nodes into new documents. tostring()
  had very nasty side-effects before this fix, sorry!

0.5.1 (2005-04-09)
==================

* Python 2.2 compatibility fixes.

* unicode fixes in Element() and Comment() as well as XML(); unicode
  input wasn't properly being UTF-8 encoded.

0.5 (2005-04-08)
================

Initial public release.
